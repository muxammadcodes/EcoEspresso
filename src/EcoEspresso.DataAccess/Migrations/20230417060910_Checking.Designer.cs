// <auto-generated />
using System;
using EcoEspresso.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoEspresso.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230417060910_Checking")]
    partial class Checking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcoEspresso.Domain.Entities.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Chefs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(419),
                            Email = "azizkarimov@example.com",
                            FirstName = "Aziz",
                            LastName = "Karimov",
                            Password = "password1",
                            Salary = 5000.00m,
                            Salt = "salt1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(424),
                            Email = "shahzodaabdullaeva@example.com",
                            FirstName = "Shahzoda",
                            LastName = "Abdullaeva",
                            Password = "password2",
                            Salary = 6000.00m,
                            Salt = "salt2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(425),
                            Email = "jamshidxolmatov@example.com",
                            FirstName = "Jamshid",
                            LastName = "Xolmatov",
                            Password = "password3",
                            Salary = 7000.00m,
                            Salt = "salt3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(427),
                            Email = "nargizasaidova@example.com",
                            FirstName = "Nargiza",
                            LastName = "Saidova",
                            Password = "password4",
                            Salary = 5500.00m,
                            Salt = "salt4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(428),
                            Email = "dilshodrahmonov@example.com",
                            FirstName = "Dilshod",
                            LastName = "Rahmonov",
                            Password = "password5",
                            Salary = 8000.00m,
                            Salt = "salt5"
                        });
                });

            modelBuilder.Entity("EcoEspresso.Domain.Entities.FoodInfotmation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int?>("MealId1")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("MealId1")
                        .IsUnique()
                        .HasFilter("[MealId1] IS NOT NULL");

                    b.ToTable("FoodInfotmations");
                });

            modelBuilder.Entity("EcoEspresso.Domain.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChefId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChefId = 1,
                            Count = 10,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(484),
                            Name = "Plov",
                            Price = 8.99m
                        },
                        new
                        {
                            Id = 2,
                            ChefId = 2,
                            Count = 5,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(486),
                            Name = "Lagman",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 3,
                            ChefId = 3,
                            Count = 8,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(487),
                            Name = "Manti",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 4,
                            ChefId = 4,
                            Count = 12,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(488),
                            Name = "Shashlik",
                            Price = 15.99m
                        },
                        new
                        {
                            Id = 5,
                            ChefId = 5,
                            Count = 7,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(489),
                            Name = "Chuchvara",
                            Price = 7.99m
                        },
                        new
                        {
                            Id = 6,
                            ChefId = 1,
                            Count = 15,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(490),
                            Name = "Samsa",
                            Price = 6.99m
                        },
                        new
                        {
                            Id = 7,
                            ChefId = 2,
                            Count = 20,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(491),
                            Name = "Lavash",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 8,
                            ChefId = 3,
                            Count = 25,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(492),
                            Name = "Non",
                            Price = 3.99m
                        },
                        new
                        {
                            Id = 9,
                            ChefId = 4,
                            Count = 6,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(492),
                            Name = "Shorva",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 10,
                            ChefId = 5,
                            Count = 3,
                            CreatedAt = new DateTime(2023, 4, 17, 6, 9, 10, 379, DateTimeKind.Utc).AddTicks(494),
                            Name = "Beshbarmak",
                            Price = 18.99m
                        });
                });

            modelBuilder.Entity("EcoEspresso.Domain.Entities.FoodInfotmation", b =>
                {
                    b.HasOne("EcoEspresso.Domain.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoEspresso.Domain.Entities.Meal", null)
                        .WithOne("FoodInfotmation")
                        .HasForeignKey("EcoEspresso.Domain.Entities.FoodInfotmation", "MealId1");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("EcoEspresso.Domain.Entities.Meal", b =>
                {
                    b.HasOne("EcoEspresso.Domain.Entities.Chef", "Chef")
                        .WithMany("Meals")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("EcoEspresso.Domain.Entities.Chef", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("EcoEspresso.Domain.Entities.Meal", b =>
                {
                    b.Navigation("FoodInfotmation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
